<matex:MaterialWindow
  x:Class="hyperactive.MainWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:git="clr-namespace:LibGit2Sharp;assembly=LibGit2Sharp"
  xmlns:local="clr-namespace:hyperactive"
  xmlns:mat="http://materialdesigninxaml.net/winfx/xaml/themes"
  xmlns:matex="https://spiegelp.github.io/MaterialDesignExtensions/winfx/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"
  Title="  hyperactive"
  Width="1024"
  Height="768"
  d:DataContext="{d:DesignInstance Type=local:Main,
                                   IsDesignTimeCreatable=True}"
  Background="{DynamicResource MaterialDesignToolBarBackground}"
  BorderBackgroundBrush="{DynamicResource MaterialDesignToolBarBackground}"
  FontFamily="{DynamicResource MaterialDesignFont}"
  TextElement.FontSize="13"
  TextElement.FontWeight="Regular"
  TextElement.Foreground="{DynamicResource MaterialDesignBody}"
  TextOptions.TextFormattingMode="Ideal"
  TextOptions.TextRenderingMode="Auto"
  mc:Ignorable="d">
  <Window.Resources>
    <SolidColorBrush x:Key="ErrorBrush" Color="#F44336" />

    <local:AndConverter x:Key="AndConv" />

    <local:ZeroToTrueConverter x:Key="ZeroToTrueConv" />

    <local:BoolToColorConverter x:Key="BoolToColorConv" />

    <local:NullableToBoolConverter x:Key="NullToFalseConv" />

    <local:BoolToBrushConverter
      x:Key="IsHeadToHeaderBrushConv"
      FalseBrush="{StaticResource MaterialDesignBody}"
      TrueBrush="{StaticResource SecondaryHueLightBrush}" />

    <local:BoolToBrushConverter
      x:Key="IsHeadToCardBgBrushConv"
      FalseBrush="{StaticResource MaterialDesignCardBackground}"
      TrueBrush="{StaticResource MaterialDesignLightSeparatorBackground}" />

    <local:BoolToBrushConverter
      x:Key="IsReadOnlyToBorderBrushConv"
      FalseBrush="{StaticResource PrimaryHueMidBrush}"
      TrueBrush="{StaticResource MaterialDesignBody}" />

    <local:WTreeStatusToBrushConverter
      x:Key="WTreeStatusToBrushConv"
      CleanBrush="{StaticResource MaterialDesignBody}"
      ConflictedBrush="{StaticResource ErrorBrush}"
      DirtyBrush="{StaticResource SecondaryHueLightBrush}" />

    <local:StatusToBrushConverter
      x:Key="StatusToBrushConv"
      AddedBrush="{StaticResource SecondaryHueMidBrush}"
      ConflictedBrush="{StaticResource ErrorBrush}"
      IgnoredBrush="{StaticResource MaterialDesignLightSeparatorBackground}"
      ModifiedBrush="{StaticResource SecondaryHueLightBrush}"
      UnchangedBrush="{StaticResource MaterialDesignBody}" />

    <local:StatusToToolTipConverter x:Key="StatusToToolTipConv" />

    <local:CurrentOperationToTextConverter x:Key="CurrOpToTextConv" />

    <DataTemplate DataType="{x:Type local:EnterCommitMessage}">
      <Grid MinWidth="300" Background="{DynamicResource MaterialDesignPaper}">
        <Grid.RowDefinitions>
          <RowDefinition Height="auto" />
          <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <StackPanel Margin="16">
          <TextBlock HorizontalAlignment="Center" Text="enter commit message:" />

          <TextBox
            Grid.Row="0"
            Width="200"
            Margin="0,16,0,0"
            mat:TextFieldAssist.HasClearButton="True"
            Text="{Binding CommitMessage, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
        </StackPanel>

        <Grid Grid.Row="1" Margin="16">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>

          <Button
            Grid.Column="0"
            Background="{DynamicResource SecondaryHueDarkBrush}"
            Command="{x:Static mat:DialogHost.CloseDialogCommand}"
            CommandParameter="OK"
            Content="{mat:PackIcon CheckBold,
                                   Size=20}"
            IsDefault="True"
            IsEnabled="{Binding IsValid}" />

          <Button
            Grid.Column="1"
            HorizontalAlignment="Right"
            Background="{DynamicResource PrimaryHueMidBrush}"
            Command="{x:Static mat:DialogHost.CloseDialogCommand}"
            Content="{mat:PackIcon CloseThick,
                                   Size=20}"
            IsCancel="True" />
        </Grid>
      </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:EnterNewBranchName}">
      <Grid MinWidth="300" Background="{DynamicResource MaterialDesignPaper}">
        <Grid.RowDefinitions>
          <RowDefinition Height="auto" />
          <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <StackPanel Margin="16">
          <TextBlock
            HorizontalAlignment="Center"
            Text="enter new branch name:"
            Visibility="{Binding OldName, Converter={StaticResource InvertedNullVisibilityConverter}}" />

          <TextBlock HorizontalAlignment="Center" Visibility="{Binding OldName, Converter={StaticResource NullVisibilityConverter}}">
            <Run Text="enter new branch name for" />
            <Run
              FontFamily="Consolas"
              Foreground="{DynamicResource SecondaryHueMidBrush}"
              Text="{Binding OldName, Mode=OneTime}" /><Run Text=":" />
          </TextBlock>

          <TextBox
            Grid.Row="0"
            Width="200"
            Margin="0,16,0,0"
            mat:TextFieldAssist.HasClearButton="True"
            Text="{Binding NewName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
        </StackPanel>

        <Grid Grid.Row="1" Margin="16">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>

          <Button
            Grid.Column="0"
            Background="{DynamicResource SecondaryHueDarkBrush}"
            Command="{x:Static mat:DialogHost.CloseDialogCommand}"
            CommandParameter="OK"
            Content="{mat:PackIcon CheckBold,
                                   Size=20}"
            IsDefault="True"
            IsEnabled="{Binding IsValid}" />

          <Button
            Grid.Column="1"
            HorizontalAlignment="Right"
            Background="{DynamicResource PrimaryHueMidBrush}"
            Command="{x:Static mat:DialogHost.CloseDialogCommand}"
            Content="{mat:PackIcon CloseThick,
                                   Size=20}"
            IsCancel="True" />
        </Grid>
      </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:Confirm}">
      <Grid MinWidth="250" Background="{DynamicResource MaterialDesignPaper}">
        <Grid.RowDefinitions>
          <RowDefinition Height="auto" />
          <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <TextBlock
          Grid.Row="0"
          Margin="16"
          HorizontalAlignment="Center">
          <Run Text="{Binding Action, Mode=OneTime}" />
          <Run
            FontFamily="Consolas"
            Foreground="{DynamicResource SecondaryHueMidBrush}"
            Text="{Binding Subject, Mode=OneTime}" /><Run Text="?" />
        </TextBlock>

        <Grid Grid.Row="1" Margin="16">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>

          <Button
            Grid.Column="0"
            Background="{DynamicResource SecondaryHueDarkBrush}"
            Command="{x:Static mat:DialogHost.CloseDialogCommand}"
            CommandParameter="OK"
            Content="{mat:PackIcon CheckBold,
                                   Size=20}"
            IsDefault="True" />

          <Button
            Grid.Column="1"
            HorizontalAlignment="Right"
            Background="{DynamicResource PrimaryHueMidBrush}"
            Command="{x:Static mat:DialogHost.CloseDialogCommand}"
            Content="{mat:PackIcon CloseThick,
                                   Size=20}"
            IsCancel="True" />
        </Grid>
      </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:SelectMergeSource}">
      <Grid MinWidth="300" Background="{DynamicResource MaterialDesignPaper}">
        <Grid.RowDefinitions>
          <RowDefinition Height="auto" />
          <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Margin="16">
          <TextBlock HorizontalAlignment="Center">
            <Run Text="select branch to merge into " /><Run
              FontFamily="Consolas"
              Foreground="{DynamicResource SecondaryHueMidBrush}"
              Text="{Binding Target.Name, Mode=OneTime}" /><Run Text=":" />
          </TextBlock>

          <ComboBox
            Margin="0,16,0,0"
            HorizontalAlignment="Center"
            mat:HintAssist.Hint="source branch"
            ItemsSource="{Binding Sources}"
            SelectedItem="{Binding SelectedSource}" />
        </StackPanel>

        <Grid Grid.Row="1" Margin="16">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>

          <Button
            Grid.Column="0"
            Background="{DynamicResource SecondaryHueDarkBrush}"
            Command="{x:Static mat:DialogHost.CloseDialogCommand}"
            CommandParameter="OK"
            Content="{mat:PackIcon CheckBold,
                                   Size=20}"
            IsDefault="True"
            IsEnabled="{Binding SelectedSource, Converter={StaticResource NullToFalseConv}}" />

          <Button
            Grid.Column="1"
            HorizontalAlignment="Right"
            Background="{DynamicResource PrimaryHueMidBrush}"
            Command="{x:Static mat:DialogHost.CloseDialogCommand}"
            Content="{mat:PackIcon CloseThick,
                                   Size=20}"
            IsCancel="True" />
        </Grid>
      </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:SelectCommit}">
      <Grid MinWidth="300" Background="{DynamicResource MaterialDesignPaper}">
        <Grid.RowDefinitions>
          <RowDefinition Height="auto" />
          <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Margin="16">
          <TextBlock HorizontalAlignment="Center">
            <Run Text="select commit to merge into " /><Run
              FontFamily="Consolas"
              Foreground="{DynamicResource SecondaryHueMidBrush}"
              Text="{Binding MergeTarget.Name, Mode=OneTime}" /><Run Text=":" />
          </TextBlock>

          <matex:Autocomplete
            MinHeight="30"
            Margin="0,16,0,0"
            AutocompleteSource="{Binding}"
            Background="{DynamicResource MaterialDesignPaper}"
            Hint="sha or message"
            SearchOnInitialFocus="True"
            SelectedItem="{Binding SelectedCommit, Mode=TwoWay}"
            ShowClearButtonOnlyOnSelectedItem="false"
            Style="{StaticResource MaterialDesignAutocompleteDense}">
            <matex:Autocomplete.ItemTemplate>
              <DataTemplate DataType="{x:Type local:Commit_}">
                <TextBlock VerticalAlignment="Center">
                  <Run FontFamily="Consolas" Text="{Binding ShortSha, Mode=OneWay}" />
                  <Run Text="{Binding ShortMessage, Mode=OneWay}" />
                </TextBlock>
              </DataTemplate>
            </matex:Autocomplete.ItemTemplate>
          </matex:Autocomplete>
        </StackPanel>

        <Grid Grid.Row="1" Margin="16">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>

          <Button
            Grid.Column="0"
            Background="{DynamicResource SecondaryHueDarkBrush}"
            Command="{x:Static mat:DialogHost.CloseDialogCommand}"
            CommandParameter="OK"
            Content="{mat:PackIcon CheckBold,
                                   Size=20}"
            IsDefault="True"
            IsEnabled="{Binding SelectedCommit, Converter={StaticResource NullToFalseConv}}" />

          <Button
            Grid.Column="1"
            HorizontalAlignment="Right"
            Background="{DynamicResource PrimaryHueMidBrush}"
            Command="{x:Static mat:DialogHost.CloseDialogCommand}"
            Content="{mat:PackIcon CloseThick,
                                   Size=20}"
            IsCancel="True" />
        </Grid>
      </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:EnterNewItemName}">
      <Grid MinWidth="300" Background="{DynamicResource MaterialDesignPaper}">
        <Grid.RowDefinitions>
          <RowDefinition Height="auto" />
          <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <StackPanel Margin="16">
          <TextBlock HorizontalAlignment="Center" Visibility="{Binding OldName, Converter={StaticResource InvertedNullVisibilityConverter}}">
            <Run Text="enter new" />
            <Run Text="{Binding Type, Mode=OneTime}" />
            <Run Text="name:" />
          </TextBlock>

          <TextBlock HorizontalAlignment="Center" Visibility="{Binding OldName, Converter={StaticResource NullVisibilityConverter}}">
            <Run Text="enter new" />
            <Run Text="{Binding Type, Mode=OneTime}" />
            <Run Text="name for" />
            <Run
              FontFamily="Consolas"
              Foreground="{DynamicResource SecondaryHueMidBrush}"
              Text="{Binding OldName, Mode=OneTime}" /><Run Text=":" />
          </TextBlock>

          <TextBox
            Grid.Row="0"
            Width="200"
            Margin="0,16,0,0"
            mat:TextFieldAssist.HasClearButton="True"
            Text="{Binding NewName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
        </StackPanel>

        <Grid Grid.Row="1" Margin="16">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>

          <Button
            Grid.Column="0"
            Background="{DynamicResource SecondaryHueDarkBrush}"
            Command="{x:Static mat:DialogHost.CloseDialogCommand}"
            CommandParameter="OK"
            Content="{mat:PackIcon CheckBold,
                                   Size=20}"
            IsDefault="True"
            IsEnabled="{Binding IsValid}" />

          <Button
            Grid.Column="1"
            HorizontalAlignment="Right"
            Background="{DynamicResource PrimaryHueMidBrush}"
            Command="{x:Static mat:DialogHost.CloseDialogCommand}"
            Content="{mat:PackIcon CloseThick,
                                   Size=20}"
            IsCancel="True" />
        </Grid>
      </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:Error}">
      <Grid MinWidth="400" Background="{DynamicResource MaterialDesignPaper}">
        <Grid.RowDefinitions>
          <RowDefinition Height="auto" />
          <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>

          <mat:PackIcon
            Grid.Column="0"
            Width="48"
            Height="48"
            Margin="16"
            Foreground="{StaticResource ErrorBrush}"
            Kind="CloseCircle" />

          <StackPanel Grid.Column="1">
            <TextBlock Margin="16" Text="{Binding Message, Mode=OneTime}" />

            <TextBox
              MaxWidth="600"
              MaxHeight="600"
              Margin="16"
              HorizontalAlignment="Stretch"
              VerticalContentAlignment="Stretch"
              mat:TextFieldAssist.UnderlineBrush="{DynamicResource MaterialDesignBody}"
              HorizontalScrollBarVisibility="Auto"
              IsReadOnly="True"
              Style="{StaticResource MaterialDesignOutlinedTextBox}"
              Text="{Binding Details, Mode=OneTime}"
              TextWrapping="NoWrap"
              VerticalScrollBarVisibility="Auto"
              Visibility="{Binding Details, Converter={StaticResource NullVisibilityConverter}}" />
          </StackPanel>
        </Grid>

        <Button
          Grid.Row="1"
          Margin="16"
          HorizontalAlignment="Right"
          Background="{DynamicResource PrimaryHueMidBrush}"
          Command="{x:Static mat:DialogHost.CloseDialogCommand}"
          Content="{mat:PackIcon CloseThick,
                                 Size=20}"
          IsCancel="True" />
      </Grid>
    </DataTemplate>
  </Window.Resources>

  <mat:DialogHost CloseOnClickAway="True" SnackbarMessageQueue="{x:Static local:Snackbar.Queue}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="auto" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>

      <!--  directory selection, branch counts, and status  -->
      <mat:Card
        Grid.Row="0"
        Margin="16"
        Padding="8"
        Background="{DynamicResource MaterialDesignPaper}">

        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>

          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>

          <!--  directory selection input  -->
          <TextBox
            Grid.Row="0"
            Grid.Column="0"
            mat:HintAssist.Hint="path to git repository"
            mat:TextFieldAssist.HasClearButton="True"
            mat:TextFieldAssist.HasLeadingIcon="True"
            mat:TextFieldAssist.LeadingIcon="Git"
            FontSize="16"
            KeyUp="LoadRepoOnReturn"
            Style="{StaticResource MaterialDesignFloatingHintTextBox}"
            Text="{Binding Directory, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />

          <!--  directory selection button  -->
          <Button
            Grid.Row="0"
            Grid.Column="1"
            Margin="16,0,0,0"
            Command="{Binding SelectDirectoryCmd}"
            Content="{mat:PackIcon FolderOpen,
                                   Size=20}"
            ToolTip="open git repository" />

          <!--  branch counts & status  -->
          <StackPanel
            Grid.Row="1"
            Grid.Column="0"
            Margin="0,8,0,0"
            Orientation="Horizontal"
            Visibility="{Binding Repo, Converter={StaticResource NullVisibilityConverter}}">
            <!--  local branches  -->
            <mat:PopupBox IsEnabled="{Binding Repo.Branches.Count, Converter={StaticResource NotZeroConverter}}" PlacementMode="BottomAndAlignLeftEdges">
              <mat:PopupBox.ToggleContent>
                <mat:Badged Badge="{Binding Repo.Branches.Count}">
                  <TextBlock Foreground="{DynamicResource MaterialDesignBody}" Text="local branches   " />
                </mat:Badged>
              </mat:PopupBox.ToggleContent>

              <ItemsControl ItemsSource="{Binding Repo.Branches}">
                <ItemsControl.ItemTemplate>
                  <DataTemplate DataType="{x:Type local:LocalBranch}">
                    <Button
                      HorizontalContentAlignment="Left"
                      Command="{Binding CheckoutCmd}"
                      CommandParameter="{Binding}"
                      Foreground="{DynamicResource PrimaryHueLightBrush}"
                      IsEnabled="{Binding IsHead, Converter={StaticResource NotConverter}}"
                      Style="{DynamicResource MaterialDesignFlatButton}">
                      <Button.ToolTip>
                        <TextBlock>
                          <Run Text="checkout" />
                          <Run Text="{Binding Name, Mode=OneWay}" />
                        </TextBlock>
                      </Button.ToolTip>
                      <StackPanel Orientation="Horizontal">
                        <mat:PackIcon Kind="TrayArrowDown" />
                        <TextBlock
                          Margin="8,0,0,0"
                          VerticalAlignment="Center"
                          Foreground="{DynamicResource MaterialDesignBody}"
                          Text="{Binding Name, Mode=OneWay}" />
                      </StackPanel>
                    </Button>
                  </DataTemplate>
                </ItemsControl.ItemTemplate>
              </ItemsControl>
            </mat:PopupBox>

            <!--  remote branches  -->
            <mat:PopupBox
              Margin="32,0,0,0"
              IsEnabled="{Binding Repo.RemoteBranches.Length, Converter={StaticResource NotZeroConverter}}"
              PlacementMode="BottomAndAlignLeftEdges">
              <mat:PopupBox.ToggleContent>
                <mat:Badged Badge="{Binding Repo.RemoteBranches.Length}">
                  <TextBlock Foreground="{DynamicResource MaterialDesignBody}" Text="remote branches   " />
                </mat:Badged>
              </mat:PopupBox.ToggleContent>

              <ItemsControl ItemsSource="{Binding Repo.RemoteBranches}">
                <ItemsControl.ItemTemplate>
                  <DataTemplate DataType="{x:Type local:RemoteBranch}">
                    <Button
                      HorizontalContentAlignment="Left"
                      Command="{Binding CheckoutCmd}"
                      Foreground="{DynamicResource PrimaryHueLightBrush}"
                      Style="{DynamicResource MaterialDesignFlatButton}">
                      <Button.ToolTip>
                        <TextBlock>
                          <Run Text="checkout" />
                          <Run Text="{Binding Mode=OneTime}" />
                        </TextBlock>
                      </Button.ToolTip>
                      <StackPanel Orientation="Horizontal">
                        <mat:PackIcon Kind="TrayArrowDown" />
                        <TextBlock
                          Margin="8,0,0,0"
                          VerticalAlignment="Center"
                          Foreground="{DynamicResource MaterialDesignBody}"
                          Text="{Binding Name, Mode=OneTime}" />
                      </StackPanel>
                    </Button>
                  </DataTemplate>
                </ItemsControl.ItemTemplate>
              </ItemsControl>
            </mat:PopupBox>

            <!--  "status" label  -->
            <TextBlock
              Margin="32,0,0,0"
              VerticalAlignment="Center"
              Text="status:" />

            <!--  HEAD  -->
            <TextBlock
              Margin="8,0,0,0"
              VerticalAlignment="Center"
              Text="{Binding Repo.Head.Name, Mode=OneWay}"
              Visibility="{Binding Repo.Head, Converter={StaticResource NullVisibilityConverter}}" />

            <!--  unborn HEAD  -->
            <TextBlock
              Margin="8,0,0,0"
              VerticalAlignment="Center"
              Text="{Binding Repo.LibGitRepo.Head.FriendlyName, Mode=OneWay}"
              Visibility="{Binding Repo.Head, Converter={StaticResource InvertedNullVisibilityConverter}}" />

            <!--  status  -->
            <TextBlock
              Margin="8,0,0,0"
              VerticalAlignment="Center"
              FontFamily="Consolas"
              Foreground="{Binding Repo.Status.WTreeStatus, Converter={StaticResource WTreeStatusToBrushConv}, Mode=OneWay}">
              +<Run Text="{Binding Repo.Status.IdxAdd, Mode=OneWay}" />
              ~<Run Text="{Binding Repo.Status.IdxMod, Mode=OneWay}" />
              -<Run Text="{Binding Repo.Status.IdxDel, Mode=OneWay}" />
              |
              +<Run Text="{Binding Repo.Status.WdirAdd, Mode=OneWay}" />
              ~<Run Text="{Binding Repo.Status.WdirMod, Mode=OneWay}" />
              -<Run Text="{Binding Repo.Status.WdirDel, Mode=OneWay}" />
              !<Run Text="{Binding Repo.Status.WdirCon, Mode=OneWay}" />
            </TextBlock>

            <!--  operation in progress  -->
            <TextBlock
              Margin="8,0,0,0"
              VerticalAlignment="Center"
              Text="{Binding Repo.Status.CurrentOperation, Mode=OneWay, Converter={StaticResource CurrOpToTextConv}}" />
          </StackPanel>

          <!--  load button  -->
          <Button
            Grid.Row="1"
            Grid.Column="1"
            Margin="16,8,0,0"
            Command="{Binding LoadRepositoryCmd}"
            Content="{mat:PackIcon Reload,
                                   Size=20}"
            IsEnabled="{Binding IsValid}"
            ToolTip="reload git repository" />
        </Grid>
      </mat:Card>

      <!--  branches  -->
      <Grid Grid.Row="1">
        <!--  no repo opened  -->
        <TextBlock
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Foreground="{DynamicResource MaterialDesignLightSeparatorBackground}"
          Visibility="{Binding Repo, Converter={StaticResource InvertedNullVisibilityConverter}}">
          no git repository opened
        </TextBlock>

        <!--  empty repo  -->
        <StackPanel VerticalAlignment="Center">
          <StackPanel.Visibility>
            <MultiBinding Converter="{StaticResource andTrueAsVisibleConverter}">
              <Binding Converter="{StaticResource NullToFalseConv}" Path="Repo.Branches" />
              <Binding Converter="{StaticResource ZeroToTrueConv}" Path="Repo.Branches.Count" />
            </MultiBinding>
          </StackPanel.Visibility>

          <TextBlock HorizontalAlignment="Center" Foreground="{DynamicResource MaterialDesignLightSeparatorBackground}">
            repository has no local branches
          </TextBlock>

          <Button
            Margin="0,8,0,0"
            Command="{Binding Repo.CreateInitialBranchCmd}"
            CommandParameter="{Binding}"
            Content="{mat:PackIcon SourceBranchPlus,
                                   Size=32}"
            Style="{StaticResource MaterialDesignIconButton}"
            ToolTip="create branch" />
        </StackPanel>

        <!--  repo with local branches  -->
        <ItemsControl ItemsSource="{Binding Repo.Branches}">
          <ItemsControl.Visibility>
            <MultiBinding Converter="{StaticResource andTrueAsVisibleConverter}">
              <Binding Converter="{StaticResource NullToFalseConv}" Path="Repo.Branches" />
              <Binding Converter="{StaticResource NotZeroConverter}" Path="Repo.Branches.Count" />
            </MultiBinding>
          </ItemsControl.Visibility>

          <ItemsControl.ItemTemplate>
            <DataTemplate DataType="{x:Type local:LocalBranch}">
              <mat:Card
                Margin="16"
                Padding="8"
                Background="{DynamicResource MaterialDesignPaper}">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="2*" />
                    <RowDefinition Height="3*" />
                  </Grid.RowDefinitions>

                  <!--  branch header  -->
                  <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <!--  branch name  -->
                    <StackPanel
                      Grid.Column="0"
                      Margin="8,0,0,0"
                      VerticalAlignment="Center"
                      Orientation="Horizontal">
                      <TextBlock
                        Foreground="{Binding IsHead, Converter={StaticResource IsHeadToHeaderBrushConv}}"
                        Style="{DynamicResource MaterialDesignHeadline6TextBlock}"
                        Text="* "
                        Visibility="{Binding IsHead, Converter={StaticResource BooleanToVisibilityConverter}}" />

                      <TextBlock
                        Foreground="{Binding IsHead, Converter={StaticResource IsHeadToHeaderBrushConv}}"
                        Style="{DynamicResource MaterialDesignHeadline6TextBlock}"
                        Text="{Binding Name, Mode=OneWay}" />
                    </StackPanel>

                    <!--  branch actions  -->
                    <StackPanel Grid.Column="1" Orientation="Horizontal">
                      <Button
                        Command="{Binding CheckoutCmd}"
                        CommandParameter="{Binding}"
                        Content="{mat:PackIcon TrayArrowDown,
                                               Size=20}"
                        Style="{StaticResource MaterialDesignIconButton}"
                        ToolTip="checkout this branch" />

                      <Button
                        Command="{Binding CommitCmd}"
                        Content="{mat:PackIcon ContentSave,
                                               Size=20}"
                        IsEnabled="{Binding IsHead}"
                        Style="{StaticResource MaterialDesignIconButton}"
                        ToolTip="stage and commit all local changes" />

                      <mat:PopupBox Foreground="{DynamicResource PrimaryHueMidBrush}" PlacementMode="BottomAndAlignLeftEdges">
                        <StackPanel>
                          <Button
                            HorizontalContentAlignment="Left"
                            Command="{Binding BranchOffCmd}"
                            CommandParameter="{Binding}"
                            Foreground="{DynamicResource PrimaryHueLightBrush}"
                            Style="{DynamicResource MaterialDesignFlatButton}"
                            ToolTip="create a new branch from here">
                            <StackPanel Orientation="Horizontal">
                              <mat:PackIcon Kind="SourceBranchPlus" />
                              <TextBlock
                                Margin="8,0,0,0"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource MaterialDesignBody}"
                                Text="branch" />
                            </StackPanel>
                          </Button>

                          <Separator />

                          <Button
                            HorizontalContentAlignment="Left"
                            Command="{Binding Parent.MergeBranchCmd}"
                            CommandParameter="{Binding}"
                            Foreground="{DynamicResource PrimaryHueLightBrush}"
                            IsEnabled="{Binding IsHead}"
                            Style="{DynamicResource MaterialDesignFlatButton}"
                            ToolTip="merge another branch into this one">
                            <StackPanel Orientation="Horizontal">
                              <mat:PackIcon Kind="SourceMerge" />
                              <TextBlock
                                Margin="8,0,0,0"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource MaterialDesignBody}"
                                Text="merge" />
                            </StackPanel>
                          </Button>

                          <Button
                            HorizontalContentAlignment="Left"
                            Command="{Binding Parent.CherryPickCmd}"
                            CommandParameter="{Binding}"
                            Foreground="{DynamicResource PrimaryHueLightBrush}"
                            IsEnabled="{Binding IsHead}"
                            Style="{DynamicResource MaterialDesignFlatButton}"
                            ToolTip="cherry-pick a commit into this branch">
                            <StackPanel Orientation="Horizontal">
                              <mat:PackIcon Kind="SourceCommit" />
                              <TextBlock
                                Margin="8,0,0,0"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource MaterialDesignBody}"
                                Text="cherry-pick" />
                            </StackPanel>
                          </Button>

                          <Separator />

                          <Button
                            HorizontalContentAlignment="Left"
                            Command="{Binding RenameCmd}"
                            CommandParameter="{Binding}"
                            Foreground="{DynamicResource PrimaryHueLightBrush}"
                            Style="{DynamicResource MaterialDesignFlatButton}"
                            ToolTip="rename this branch">
                            <StackPanel Orientation="Horizontal">
                              <mat:PackIcon Kind="Pencil" />
                              <TextBlock
                                Margin="8,0,0,0"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource MaterialDesignBody}"
                                Text="rename" />
                            </StackPanel>
                          </Button>

                          <Button
                            HorizontalContentAlignment="Left"
                            Command="{Binding DeleteCmd}"
                            CommandParameter="{Binding}"
                            Foreground="{DynamicResource PrimaryHueLightBrush}"
                            IsEnabled="{Binding IsHead, Converter={StaticResource NotConverter}}"
                            Style="{DynamicResource MaterialDesignFlatButton}"
                            ToolTip="delete this branch locally">
                            <StackPanel Orientation="Horizontal">
                              <mat:PackIcon Kind="TrashCan" />
                              <TextBlock
                                Margin="8,0,0,0"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource MaterialDesignBody}"
                                Text="delete" />
                            </StackPanel>
                          </Button>
                        </StackPanel>
                      </mat:PopupBox>
                    </StackPanel>
                  </Grid>

                  <!--  directory view  -->
                  <Border
                    Grid.Row="1"
                    Margin="0,16,0,0"
                    BorderBrush="{DynamicResource MaterialDesignLightSeparatorBackground}"
                    BorderThickness="1">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="auto" />
                      </Grid.RowDefinitions>

                      <ListBox
                        Grid.Row="0"
                        HorizontalContentAlignment="Stretch"
                        BorderBrush="{DynamicResource MaterialDesignLightSeparatorBackground}"
                        BorderThickness="0,0,0,1"
                        ItemsSource="{Binding CurrentDirectory}"
                        SelectedItem="{Binding SelectedItem}">
                        <ListBox.ItemTemplate>
                          <DataTemplate DataType="{x:Type local:IDirectoryItem}">
                            <ContentControl Content="{Binding}">
                              <ContentControl.Style>
                                <!--  file item  -->
                                <Style TargetType="{x:Type ContentControl}">
                                  <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                      <DataTemplate DataType="{x:Type local:IDirectoryItem}">
                                        <StackPanel Background="Transparent" Orientation="Horizontal">
                                          <mat:PackIcon Kind="FileOutline" />

                                          <TextBlock
                                            Margin="8,0,0,0"
                                            Foreground="{Binding Status, Converter={StaticResource StatusToBrushConv}}"
                                            Text="{Binding Name}"
                                            ToolTip="{Binding Status, Converter={StaticResource StatusToToolTipConv}, ConverterParameter={x:Static local:ItemType.File}}" />
                                        </StackPanel>
                                      </DataTemplate>
                                    </Setter.Value>
                                  </Setter>

                                  <!--  folder item  -->
                                  <Style.Triggers>
                                    <DataTrigger Binding="{Binding Type}" Value="{x:Static local:ItemType.Folder}">
                                      <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                          <DataTemplate DataType="{x:Type local:IDirectoryItem}">
                                            <StackPanel Background="Transparent" Orientation="Horizontal">
                                              <mat:PackIcon Kind="Folder" />

                                              <TextBlock
                                                Margin="8,0,0,0"
                                                Foreground="{Binding Status, Converter={StaticResource StatusToBrushConv}}"
                                                Text="{Binding Name}"
                                                ToolTip="{Binding Status, Converter={StaticResource StatusToToolTipConv}, ConverterParameter={x:Static local:ItemType.Folder}}" />
                                            </StackPanel>
                                          </DataTemplate>
                                        </Setter.Value>
                                      </Setter>
                                    </DataTrigger>
                                  </Style.Triggers>
                                </Style>
                              </ContentControl.Style>

                              <ContentControl.InputBindings>
                                <MouseBinding Command="{Binding Parent.NavigateCmd}" MouseAction="LeftDoubleClick" />
                              </ContentControl.InputBindings>
                            </ContentControl>
                          </DataTemplate>
                        </ListBox.ItemTemplate>
                      </ListBox>

                      <ToolBar
                        Grid.Row="1"
                        Background="{DynamicResource MaterialDesignPaper}"
                        Style="{DynamicResource MaterialDesignToolBar}"
                        ToolBarTray.IsLocked="True">
                        <Button
                          Command="{Binding CreateFolderCmd}"
                          Content="{mat:PackIcon FolderPlus}"
                          IsEnabled="{Binding IsHead}"
                          Style="{StaticResource MaterialDesignToolButton}"
                          ToolTip="create new folder" />

                        <Button
                          Command="{Binding CreateFileCmd}"
                          Content="{mat:PackIcon FilePlusOutline}"
                          IsEnabled="{Binding IsHead}"
                          Style="{StaticResource MaterialDesignToolButton}"
                          ToolTip="create new file" />

                        <Separator />

                        <Button
                          Command="{Binding RenameItemCmd}"
                          Content="{mat:PackIcon Pencil}"
                          Style="{StaticResource MaterialDesignToolButton}"
                          ToolTip="rename selected item">
                          <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource AndConv}">
                              <Binding Path="IsHead" />
                              <Binding Converter="{StaticResource NullToFalseConv}" Path="SelectedItem" />
                            </MultiBinding>
                          </Button.IsEnabled>
                        </Button>

                        <Button
                          Command="{Binding DeleteItemCmd}"
                          Content="{mat:PackIcon TrashCan}"
                          Style="{StaticResource MaterialDesignToolButton}"
                          ToolTip="delete selected item">
                          <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource AndConv}">
                              <Binding Path="IsHead" />
                              <Binding Converter="{StaticResource NullToFalseConv}" Path="SelectedItem" />
                            </MultiBinding>
                          </Button.IsEnabled>
                        </Button>
                      </ToolBar>
                    </Grid>
                  </Border>

                  <!--  file editor  -->
                  <TextBox
                    Grid.Row="2"
                    Margin="0,16,0,0"
                    VerticalContentAlignment="Stretch"
                    mat:TextFieldAssist.UnderlineBrush="{Binding SelectedItem.ReadOnly, Converter={StaticResource IsReadOnlyToBorderBrushConv}}"
                    AcceptsReturn="True"
                    AcceptsTab="False"
                    FontFamily="Consolas"
                    HorizontalScrollBarVisibility="Auto"
                    IsReadOnly="{Binding SelectedItem.ReadOnly}"
                    LostFocus="UpdateTextBoxBindingOnLeave"
                    Style="{StaticResource MaterialDesignOutlinedTextBox}"
                    Text="{Binding SelectedItem.Content, UpdateSourceTrigger=PropertyChanged, Delay=1000}"
                    TextWrapping="NoWrap"
                    VerticalScrollBarVisibility="Auto">
                    <TextBox.IsEnabled>
                      <MultiBinding Converter="{StaticResource AndConv}">
                        <Binding Converter="{StaticResource NullToFalseConv}" Path="SelectedItem" />
                        <Binding Converter="{StaticResource NullToFalseConv}" Path="SelectedItem.Content" />
                      </MultiBinding>
                    </TextBox.IsEnabled>
                  </TextBox>
                </Grid>
              </mat:Card>
            </DataTemplate>
          </ItemsControl.ItemTemplate>

          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <UniformGrid Rows="1" />
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
        </ItemsControl>
      </Grid>

      <mat:Snackbar Grid.Row="1" MessageQueue="{x:Static local:Snackbar.Queue}" />
    </Grid>
  </mat:DialogHost>
</matex:MaterialWindow>
