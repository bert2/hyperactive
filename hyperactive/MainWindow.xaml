<Window
  x:Class="hyperactive.MainWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:git="clr-namespace:LibGit2Sharp;assembly=LibGit2Sharp"
  xmlns:local="clr-namespace:hyperactive"
  xmlns:mat="http://materialdesigninxaml.net/winfx/xaml/themes"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"
  x:Name="mainWindow"
  Title="hyperactive"
  Width="1024"
  Height="768"
  d:DataContext="{d:DesignInstance Type=local:Repo,
                                   IsDesignTimeCreatable=True}"
  Background="{DynamicResource MaterialDesignToolBarBackground}"
  FontFamily="{DynamicResource MaterialDesignFont}"
  TextElement.FontSize="13"
  TextElement.FontWeight="Regular"
  TextElement.Foreground="{DynamicResource MaterialDesignBody}"
  TextOptions.TextFormattingMode="Ideal"
  TextOptions.TextRenderingMode="Auto"
  mc:Ignorable="d">
  <Window.Resources>
    <local:AndConverter x:Key="AndConv" />

    <local:BoolToColorConverter x:Key="BoolToColorConv" />

    <local:NullableToBoolConverter x:Key="NullToFalseConv" />

    <local:BoolToBrushConverter
      x:Key="IsHeadToHeaderBrushConv"
      FalseBrush="{StaticResource MaterialDesignBody}"
      TrueBrush="{StaticResource SecondaryHueLightBrush}" />

    <local:BoolToBrushConverter
      x:Key="IsCleanToStatusBrushConv"
      FalseBrush="#F44336"
      TrueBrush="{StaticResource SecondaryHueDarkBrush}" />

    <local:BoolToBrushConverter
      x:Key="IsHeadToBorderBrushConv"
      FalseBrush="{StaticResource MaterialDesignLightSeparatorBackground}"
      TrueBrush="{StaticResource PrimaryHueMidBrush}" />

    <local:BoolToBrushConverter
      x:Key="IsHeadToCardBgBrushConv"
      FalseBrush="{StaticResource MaterialDesignCardBackground}"
      TrueBrush="{StaticResource MaterialDesignLightSeparatorBackground}" />

    <DataTemplate DataType="{x:Type local:EnterCommitMessage}">
      <Grid Background="{DynamicResource MaterialDesignPaper}">
        <Grid.RowDefinitions>
          <RowDefinition Height="auto" />
          <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <StackPanel Margin="16">
          <TextBlock HorizontalAlignment="Center" Text="Enter commit message:" />

          <TextBox
            x:Name="txtCommitMessage"
            Grid.Row="0"
            Width="200"
            Margin="0,16,0,0"
            mat:HintAssist.Hint="commit message"
            mat:TextFieldAssist.HasClearButton="True"
            Style="{StaticResource MaterialDesignFloatingHintTextBox}">
            <TextBox.Text>
              <Binding Path="CommitMessage" UpdateSourceTrigger="PropertyChanged">
                <Binding.ValidationRules>
                  <local:ValidateNotEmpty />
                </Binding.ValidationRules>
              </Binding>
            </TextBox.Text>
          </TextBox>
        </StackPanel>

        <Grid Grid.Row="1" Margin="16">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>

          <Button
            Grid.Column="0"
            Background="{DynamicResource SecondaryHueDarkBrush}"
            Command="{x:Static mat:DialogHost.CloseDialogCommand}"
            CommandParameter="OK"
            Content="{mat:PackIcon CheckBold,
                                   Size=20}"
            IsDefault="True">
            <Button.IsEnabled>
              <MultiBinding Converter="{StaticResource AndConv}">
                <Binding
                  Converter="{StaticResource NotConverter}"
                  ElementName="txtCommitMessage"
                  Path="(Validation.HasError)" />
                <Binding Path="Touched" />
              </MultiBinding>
            </Button.IsEnabled>
          </Button>

          <Button
            Grid.Column="1"
            HorizontalAlignment="Right"
            Background="{DynamicResource PrimaryHueMidBrush}"
            Command="{x:Static mat:DialogHost.CloseDialogCommand}"
            Content="{mat:PackIcon CloseThick,
                                   Size=20}"
            IsCancel="True" />
        </Grid>
      </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:SelectMergeSource}">
      <Grid Background="{DynamicResource MaterialDesignPaper}">
        <Grid.RowDefinitions>
          <RowDefinition Height="auto" />
          <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Margin="16">
          <TextBlock HorizontalAlignment="Center">
            <Run Text="Select branch to merge into " /><Run
              FontFamily="Consolas"
              Foreground="{DynamicResource SecondaryHueMidBrush}"
              Text="{Binding Target.Name, Mode=OneWay}" /><Run Text=":" />
          </TextBlock>

          <ComboBox
            Margin="0,16,0,0"
            HorizontalAlignment="Center"
            mat:HintAssist.Hint="source branch"
            ItemsSource="{Binding Sources}"
            SelectedItem="{Binding SelectedSource}"
            Style="{StaticResource MaterialDesignFloatingHintComboBox}" />
        </StackPanel>

        <Grid Grid.Row="1" Margin="16">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>

          <Button
            Grid.Column="0"
            Background="{DynamicResource SecondaryHueDarkBrush}"
            Command="{x:Static mat:DialogHost.CloseDialogCommand}"
            CommandParameter="OK"
            Content="{mat:PackIcon CheckBold,
                                   Size=20}"
            IsDefault="True"
            IsEnabled="{Binding SelectedSource, Converter={StaticResource NullToFalseConv}}" />

          <Button
            Grid.Column="1"
            HorizontalAlignment="Right"
            Background="{DynamicResource PrimaryHueMidBrush}"
            Command="{x:Static mat:DialogHost.CloseDialogCommand}"
            Content="{mat:PackIcon CloseThick,
                                   Size=20}"
            IsCancel="True" />
        </Grid>
      </Grid>
    </DataTemplate>
  </Window.Resources>
  <mat:DialogHost CloseOnClickAway="True">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="auto" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>

      <mat:Card
        Grid.Row="0"
        Margin="16"
        Padding="8"
        Background="{DynamicResource MaterialDesignPaper}">
        <StackPanel>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBox
              x:Name="txtDirectory"
              Grid.Column="0"
              mat:HintAssist.Hint="path to git repository"
              mat:TextFieldAssist.HasClearButton="True"
              mat:TextFieldAssist.HasLeadingIcon="True"
              mat:TextFieldAssist.LeadingIcon="Git"
              FontSize="16"
              Style="{StaticResource MaterialDesignFloatingHintTextBox}">
              <TextBox.Text>
                <Binding Path="Directory" UpdateSourceTrigger="PropertyChanged">
                  <Binding.ValidationRules>
                    <local:ValidateGitDirectory />
                  </Binding.ValidationRules>
                </Binding>
              </TextBox.Text>
            </TextBox>

            <Button
              Grid.Column="1"
              Margin="8,0,0,0"
              Command="{Binding SelectDirectoryCmd}"
              Content="{mat:PackIcon FolderOpen,
                                     Size=20}"
              ToolTip="open git repository" />

            <Button
              Grid.Column="2"
              Margin="8,0,0,0"
              Command="{Binding LoadRepositoryCmd}"
              Content="{mat:PackIcon Reload,
                                     Size=20}"
              ToolTip="reload git repository">
              <Button.IsEnabled>
                <MultiBinding Converter="{StaticResource AndConv}">
                  <Binding
                    Converter="{StaticResource NotConverter}"
                    ElementName="txtDirectory"
                    Path="(Validation.HasError)" />
                  <Binding Path="IsLoaded" />
                </MultiBinding>
              </Button.IsEnabled>
            </Button>
          </Grid>

          <StackPanel
            Margin="0,16,0,0"
            HorizontalAlignment="Center"
            Orientation="Horizontal">
            <StackPanel.IsEnabled>
              <MultiBinding Converter="{StaticResource AndConv}">
                <Binding
                  Converter="{StaticResource NotConverter}"
                  ElementName="txtDirectory"
                  Path="(Validation.HasError)" />
                <Binding Path="IsLoaded" />
              </MultiBinding>
            </StackPanel.IsEnabled>
            <TextBlock Text="local branches:" />
            <TextBlock Margin="8,0,0,0" Text="{Binding LocalBranchesCount}" />
            <TextBlock Margin="32,0,0,0" Text="remote branches:" />
            <TextBlock Margin="8,0,0,0" Text="{Binding RemoteBranchesCount}" />
            <TextBlock Margin="32,0,0,0" Text="status:" />
            <TextBlock
              Margin="8,0,0,0"
              FontFamily="Consolas"
              Foreground="{Binding Status.IsClean, Converter={StaticResource IsCleanToStatusBrushConv}, Mode=OneWay}">
              <Run Text="{Binding Status.Head, Mode=OneWay}" />
              +<Run Text="{Binding Status.IdxAdd, Mode=OneWay}" />
              ~<Run Text="{Binding Status.IdxMod, Mode=OneWay}" />
              -<Run Text="{Binding Status.IdxDel, Mode=OneWay}" />
              !<Run Text="{Binding Status.IdxCon, Mode=OneWay}" />
              |
              +<Run Text="{Binding Status.WdirAdd, Mode=OneWay}" />
              ~<Run Text="{Binding Status.WdirMod, Mode=OneWay}" />
              -<Run Text="{Binding Status.WdirDel, Mode=OneWay}" />
              !<Run Text="{Binding Status.WdirCon, Mode=OneWay}" />
            </TextBlock>
          </StackPanel>
        </StackPanel>
      </mat:Card>

      <ItemsControl Grid.Row="1" ItemsSource="{Binding Branches}">
        <ItemsControl.IsEnabled>
          <MultiBinding Converter="{StaticResource AndConv}">
            <Binding
              Converter="{StaticResource NotConverter}"
              ElementName="txtDirectory"
              Path="(Validation.HasError)" />
            <Binding Path="IsLoaded" />
          </MultiBinding>
        </ItemsControl.IsEnabled>
        <ItemsControl.ItemTemplate>
          <DataTemplate DataType="{x:Type local:IBranch}">
            <mat:Card
              Margin="16"
              Padding="16"
              Background="{DynamicResource MaterialDesignPaper}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="auto" />
                  <RowDefinition Height="200" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>

                  <StackPanel
                    Grid.Column="0"
                    Margin="8,0,0,0"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <TextBlock
                      Foreground="{Binding IsHead, Converter={StaticResource IsHeadToHeaderBrushConv}}"
                      Style="{DynamicResource MaterialDesignHeadline6TextBlock}"
                      Text="* "
                      Visibility="{Binding IsHead, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <TextBlock
                      Foreground="{Binding IsHead, Converter={StaticResource IsHeadToHeaderBrushConv}}"
                      Style="{DynamicResource MaterialDesignHeadline6TextBlock}"
                      Text="{Binding Name}" />
                  </StackPanel>

                  <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <Button
                      Command="{Binding DataContext.CheckoutBranchCmd, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}"
                      CommandParameter="{Binding}"
                      Content="{mat:PackIcon TrayArrowDown,
                                             Size=20}"
                      Style="{StaticResource MaterialDesignIconButton}"
                      ToolTip="checkout this branch (discards all local changes)" />

                    <Button
                      Command="{Binding DataContext.CommitCmd, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}"
                      Content="{mat:PackIcon ContentSave,
                                             Size=20}"
                      IsEnabled="{Binding IsHead}"
                      Style="{StaticResource MaterialDesignIconButton}"
                      ToolTip="stage and commit all local changes" />

                    <mat:PopupBox
                      Padding="2,0,2,0"
                      Foreground="{DynamicResource PrimaryHueMidBrush}"
                      PlacementMode="BottomAndAlignLeftEdges"
                      Style="{StaticResource MaterialDesignPopupBox}">
                      <StackPanel>
                        <Button
                          HorizontalContentAlignment="Left"
                          Command="{Binding DataContext.CheckoutBranchCmd, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}"
                          CommandParameter="{Binding}"
                          Foreground="{DynamicResource PrimaryHueLightBrush}"
                          Style="{DynamicResource MaterialDesignFlatButton}"
                          ToolTip="create a new branch from here...">
                          <StackPanel Orientation="Horizontal">
                            <mat:PackIcon Kind="SourceBranchPlus" />
                            <TextBlock
                              Margin="8,0,0,0"
                              VerticalAlignment="Center"
                              Text="branch" />
                          </StackPanel>
                        </Button>

                        <Button
                          HorizontalContentAlignment="Left"
                          Command="{Binding DataContext.MergeBranchCmd, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}"
                          CommandParameter="{Binding}"
                          Foreground="{DynamicResource PrimaryHueLightBrush}"
                          IsEnabled="{Binding IsHead}"
                          Style="{DynamicResource MaterialDesignFlatButton}"
                          ToolTip="merge another branch into this one...">
                          <StackPanel Orientation="Horizontal">
                            <mat:PackIcon Kind="SourceMerge" />
                            <TextBlock
                              Margin="8,0,0,0"
                              VerticalAlignment="Center"
                              Text="merge" />
                          </StackPanel>
                        </Button>

                        <Button
                          HorizontalContentAlignment="Left"
                          Command="{Binding DataContext.CheckoutBranchCmd, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}"
                          CommandParameter="{Binding}"
                          Foreground="{DynamicResource PrimaryHueLightBrush}"
                          IsEnabled="{Binding IsHead}"
                          Style="{DynamicResource MaterialDesignFlatButton}"
                          ToolTip="cherry-pick a commit into this branch...">
                          <StackPanel Orientation="Horizontal">
                            <mat:PackIcon Kind="SourceCommit" />
                            <TextBlock
                              Margin="8,0,0,0"
                              VerticalAlignment="Center"
                              Text="cherry-pick" />
                          </StackPanel>
                        </Button>

                        <Button
                          HorizontalContentAlignment="Left"
                          Command="{Binding DataContext.CheckoutBranchCmd, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}"
                          CommandParameter="{Binding}"
                          Foreground="{DynamicResource PrimaryHueLightBrush}"
                          Style="{DynamicResource MaterialDesignFlatButton}"
                          ToolTip="delete this branch locally">
                          <StackPanel Orientation="Horizontal">
                            <mat:PackIcon Kind="TrashCan" />
                            <TextBlock
                              Margin="8,0,0,0"
                              VerticalAlignment="Center"
                              Text="delete" />
                          </StackPanel>
                        </Button>
                      </StackPanel>
                    </mat:PopupBox>
                  </StackPanel>
                </Grid>

                <ListBox
                  Grid.Row="1"
                  Margin="0,16,0,0"
                  BorderBrush="{StaticResource MaterialDesignLightSeparatorBackground}"
                  BorderThickness="1"
                  ItemsSource="{Binding CurrentDirectory}"
                  SelectedItem="{Binding SelectedItem}">
                  <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type local:IDirectoryItem}">
                      <ContentControl Content="{Binding}">
                        <ContentControl.Style>
                          <Style TargetType="{x:Type ContentControl}">
                            <Setter Property="ContentTemplate">
                              <Setter.Value>
                                <DataTemplate DataType="{x:Type local:IDirectoryItem}">
                                  <StackPanel Orientation="Horizontal">
                                    <mat:PackIcon Kind="FileOutline" />
                                    <TextBlock Margin="8,0,0,0" Text="{Binding Name}" />
                                  </StackPanel>
                                </DataTemplate>
                              </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding Path=Type}" Value="{x:Static local:ItemType.Folder}">
                                <Setter Property="ContentTemplate">
                                  <Setter.Value>
                                    <DataTemplate DataType="{x:Type local:IDirectoryItem}">
                                      <StackPanel Orientation="Horizontal">
                                        <mat:PackIcon Kind="Folder" />
                                        <TextBlock Margin="8,0,0,0" Text="{Binding Name}" />
                                      </StackPanel>
                                    </DataTemplate>
                                  </Setter.Value>
                                </Setter>
                              </DataTrigger>
                            </Style.Triggers>
                          </Style>
                        </ContentControl.Style>
                        <ContentControl.InputBindings>
                          <MouseBinding Command="{Binding DataContext.NavigateCmd, RelativeSource={RelativeSource AncestorType=ItemsControl}}" MouseAction="LeftDoubleClick" />
                        </ContentControl.InputBindings>
                      </ContentControl>
                    </DataTemplate>
                  </ListBox.ItemTemplate>
                </ListBox>

                <TextBox
                  Grid.Row="2"
                  Margin="0,16,0,0"
                  VerticalContentAlignment="Stretch"
                  AcceptsReturn="True"
                  AcceptsTab="False"
                  FontFamily="Consolas"
                  HorizontalScrollBarVisibility="Auto"
                  IsEnabled="{Binding SelectedContent, Converter={StaticResource NullToFalseConv}}"
                  IsReadOnly="{Binding SelectedContent.ReadOnly}"
                  LostFocus="FileEditorLeft"
                  Style="{StaticResource MaterialDesignOutlinedTextBox}"
                  Text="{Binding SelectedContent.Content, UpdateSourceTrigger=PropertyChanged, Delay=1000}"
                  TextWrapping="NoWrap"
                  VerticalScrollBarVisibility="Auto" />
              </Grid>
            </mat:Card>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <UniformGrid Rows="1" />
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
      </ItemsControl>
    </Grid>
  </mat:DialogHost>
</Window>
